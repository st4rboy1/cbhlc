name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - develop
      - feature/*

jobs:
  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, dom, fileinfo, mysql, iconv
          tools: composer:v2
          coverage: none

      # Fast-fail: PHP Syntax Check
      - name: PHP Syntax Check
        run: find . -name "*.php" -not -path "./vendor/*" -not -path "./storage/*" | xargs -n1 php -l

      # Cache Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-req=ext-iconv

      # Code Quality Checks
      - name: Code Style Check (Laravel Pint)
        run: ./vendor/bin/pint --test

      - name: Static Analysis (Larastan)
        run: ./vendor/bin/phpstan analyse --memory-limit=2G

      - name: Security Vulnerability Check
        run: composer audit

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: quality-checks

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, dom, fileinfo, mysql, iconv
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      # Cache dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Node Dependencies
        run: npm ci

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-req=ext-iconv

      - name: Build Assets
        run: npm run build

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      # Run tests with coverage
      - name: Run Tests with Coverage
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: root
          DB_PASSWORD: password
          XDEBUG_MODE: coverage
        run: ./vendor/bin/pest --coverage --min=60 --coverage-html=coverage --coverage-clover=coverage.xml

      # Upload coverage reports
      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/

      # Comment PR with coverage (optional)
      - name: Comment Coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = fs.existsSync('coverage/coverage.txt')
              ? fs.readFileSync('coverage/coverage.txt', 'utf8')
              : 'Coverage report not available';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Test Coverage Report\n\`\`\`\n${coverage}\n\`\`\``
            });
        continue-on-error: true